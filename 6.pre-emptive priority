#include <stdio.h>

int main() {
    int n, i, time = 0, completed = 0;
    int bt[20], rem_bt[20], priority[20];
    int wt[20] = {0}, tat[20] = {0};

    printf("Enter number of processes: ");
    scanf("%d", &n);

    printf("Enter burst times:\n");
    for(i = 0; i < n; i++) {
        printf("P%d: ", i+1);
        scanf("%d", &bt[i]);
        rem_bt[i] = bt[i];  
    }

    printf("Enter priorities (lower number = higher priority):\n");
    for(i = 0; i < n; i++) {
        printf("P%d: ", i+1);
        scanf("%d", &priority[i]);
    }

    while(completed != n) {
        int highest = -1;
        int min_priority = 9999;

        // Find the process with highest priority that has remaining time
        for(i = 0; i < n; i++) {
            if(rem_bt[i] > 0 && priority[i] < min_priority) {
                min_priority = priority[i];
                highest = i;
            }
        }

        if(highest == -1) break; 
        rem_bt[highest]--;
        time++;

        for(i = 0; i < n; i++) {
            if(i != highest && rem_bt[i] > 0)
                wt[i]++;
        }

        if(rem_bt[highest] == 0) {
            tat[highest] = time; 
            completed++;
        }
    }

    printf("\nProcess\tBurst\tPriority\tWaiting\tTurnaround\n");
    for(i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t\t%d\t%d\n", i+1, bt[i], priority[i], wt[i], tat[i]);
    }

    return 0;
}
